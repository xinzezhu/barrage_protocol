// Code generated by protoc-gen-go.
// source: write_proc.proto
// DO NOT EDIT!

/*
Package write_proc is a generated protocol buffer package.

It is generated from these files:
	write_proc.proto

It has these top-level messages:
	Request
	Response
	Header
	Body
*/
package write_proc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Request struct {
	Header *Header `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Body   *Body   `protobuf:"bytes,2,opt,name=body" json:"body,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Request) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Request) GetBody() *Body {
	if m != nil {
		return m.Body
	}
	return nil
}

type Response struct {
	Header *Header `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Body   *Body   `protobuf:"bytes,2,opt,name=body" json:"body,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Response) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Response) GetBody() *Body {
	if m != nil {
		return m.Body
	}
	return nil
}

type Header struct {
	RoomId  uint32 `protobuf:"varint,1,opt,name=room_id,json=roomId" json:"room_id,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	RetMsg  string `protobuf:"bytes,3,opt,name=ret_msg,json=retMsg" json:"ret_msg,omitempty"`
}

func (m *Header) Reset()                    { *m = Header{} }
func (m *Header) String() string            { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()               {}
func (*Header) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Header) GetRoomId() uint32 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

func (m *Header) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *Header) GetRetMsg() string {
	if m != nil {
		return m.RetMsg
	}
	return ""
}

type Body struct {
	Content string `protobuf:"bytes,1,opt,name=content" json:"content,omitempty"`
}

func (m *Body) Reset()                    { *m = Body{} }
func (m *Body) String() string            { return proto.CompactTextString(m) }
func (*Body) ProtoMessage()               {}
func (*Body) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Body) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func init() {
	proto.RegisterType((*Request)(nil), "write_proc.Request")
	proto.RegisterType((*Response)(nil), "write_proc.Response")
	proto.RegisterType((*Header)(nil), "write_proc.Header")
	proto.RegisterType((*Body)(nil), "write_proc.Body")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for WirteProc service

type WirteProcClient interface {
	// 定义方法
	SendBarrage(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type wirteProcClient struct {
	cc *grpc.ClientConn
}

func NewWirteProcClient(cc *grpc.ClientConn) WirteProcClient {
	return &wirteProcClient{cc}
}

func (c *wirteProcClient) SendBarrage(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/write_proc.WirteProc/SendBarrage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for WirteProc service

type WirteProcServer interface {
	// 定义方法
	SendBarrage(context.Context, *Request) (*Response, error)
}

func RegisterWirteProcServer(s *grpc.Server, srv WirteProcServer) {
	s.RegisterService(&_WirteProc_serviceDesc, srv)
}

func _WirteProc_SendBarrage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WirteProcServer).SendBarrage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/write_proc.WirteProc/SendBarrage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WirteProcServer).SendBarrage(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _WirteProc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "write_proc.WirteProc",
	HandlerType: (*WirteProcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendBarrage",
			Handler:    _WirteProc_SendBarrage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "write_proc.proto",
}

func init() { proto.RegisterFile("write_proc.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 258 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xb4, 0x91, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0xad, 0xd6, 0x4d, 0x33, 0x55, 0x28, 0xa3, 0x60, 0xf4, 0x14, 0x82, 0x87, 0xe2, 0xa1,
	0x87, 0x7a, 0xf3, 0x18, 0x0f, 0xea, 0x41, 0x90, 0x15, 0x11, 0x54, 0x08, 0x69, 0x76, 0x88, 0x39,
	0x34, 0x13, 0x67, 0x47, 0xa4, 0xff, 0x5e, 0xba, 0xad, 0x18, 0x7f, 0x80, 0xc7, 0x99, 0x79, 0xef,
	0xdb, 0xe5, 0x3d, 0x98, 0x7c, 0x49, 0xa3, 0x54, 0x74, 0xc2, 0xd5, 0xac, 0x13, 0x56, 0x46, 0xf8,
	0xdd, 0x64, 0xaf, 0x10, 0x59, 0xfa, 0xf8, 0x24, 0xaf, 0x78, 0x01, 0xe6, 0x9d, 0x4a, 0x47, 0x92,
	0x0c, 0xd2, 0xc1, 0x74, 0x3c, 0xc7, 0x59, 0xcf, 0x79, 0x1b, 0x2e, 0x76, 0xab, 0xc0, 0x73, 0x18,
	0x2e, 0xd8, 0xad, 0x92, 0xdd, 0xa0, 0x9c, 0xf4, 0x95, 0x39, 0xbb, 0x95, 0x0d, 0xd7, 0xec, 0x0d,
	0x46, 0x96, 0x7c, 0xc7, 0xad, 0xa7, 0x7f, 0xa0, 0x3f, 0x81, 0xd9, 0xf8, 0xf0, 0x04, 0x22, 0x61,
	0x5e, 0x16, 0x8d, 0x0b, 0xf0, 0x43, 0x6b, 0xd6, 0xe3, 0x9d, 0xc3, 0x53, 0x18, 0x09, 0x69, 0x51,
	0xb1, 0xa3, 0x00, 0xdb, 0xb7, 0x91, 0x90, 0x5e, 0xb3, 0xa3, 0xe0, 0x21, 0x2d, 0x96, 0xbe, 0x4e,
	0xf6, 0xd2, 0xc1, 0x34, 0xb6, 0x46, 0x48, 0xef, 0x7d, 0x9d, 0xa5, 0x30, 0x5c, 0x3f, 0x82, 0x09,
	0x44, 0x15, 0xb7, 0x4a, 0xad, 0x06, 0x68, 0x6c, 0x7f, 0xc6, 0xf9, 0x0d, 0xc4, 0xcf, 0x8d, 0x28,
	0x3d, 0x08, 0x57, 0x78, 0x05, 0xe3, 0x47, 0x6a, 0x5d, 0x5e, 0x8a, 0x94, 0x35, 0xe1, 0x51, 0xff,
	0xb3, 0xdb, 0x64, 0xcf, 0x8e, 0xff, 0x2e, 0x37, 0x89, 0x64, 0x3b, 0xf9, 0xc1, 0x4b, 0xaf, 0x8a,
	0x85, 0x09, 0xed, 0x5c, 0x7e, 0x07, 0x00, 0x00, 0xff, 0xff, 0xaa, 0x25, 0xf9, 0x5a, 0xb1, 0x01,
	0x00, 0x00,
}
