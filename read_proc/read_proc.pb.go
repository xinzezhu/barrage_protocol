// Code generated by protoc-gen-go.
// source: read_proc.proto
// DO NOT EDIT!

/*
Package read_proc is a generated protocol buffer package.

It is generated from these files:
	read_proc.proto

It has these top-level messages:
	Request
	Response
	Header
	BarragePerSecond
	Body
*/
package read_proc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Request struct {
	Header *Header `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Body   *Body   `protobuf:"bytes,2,opt,name=body" json:"body,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Request) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Request) GetBody() *Body {
	if m != nil {
		return m.Body
	}
	return nil
}

type Response struct {
	Header *Header `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Body   *Body   `protobuf:"bytes,2,opt,name=body" json:"body,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Response) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Response) GetBody() *Body {
	if m != nil {
		return m.Body
	}
	return nil
}

type Header struct {
	RoomId uint32 `protobuf:"varint,1,opt,name=room_id,json=roomId" json:"room_id,omitempty"`
}

func (m *Header) Reset()                    { *m = Header{} }
func (m *Header) String() string            { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()               {}
func (*Header) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Header) GetRoomId() uint32 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

type BarragePerSecond struct {
	Content []string `protobuf:"bytes,1,rep,name=content" json:"content,omitempty"`
}

func (m *BarragePerSecond) Reset()                    { *m = BarragePerSecond{} }
func (m *BarragePerSecond) String() string            { return proto.CompactTextString(m) }
func (*BarragePerSecond) ProtoMessage()               {}
func (*BarragePerSecond) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *BarragePerSecond) GetContent() []string {
	if m != nil {
		return m.Content
	}
	return nil
}

type Body struct {
	Barrage []*BarragePerSecond `protobuf:"bytes,1,rep,name=barrage" json:"barrage,omitempty"`
}

func (m *Body) Reset()                    { *m = Body{} }
func (m *Body) String() string            { return proto.CompactTextString(m) }
func (*Body) ProtoMessage()               {}
func (*Body) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Body) GetBarrage() []*BarragePerSecond {
	if m != nil {
		return m.Barrage
	}
	return nil
}

func init() {
	proto.RegisterType((*Request)(nil), "read_proc.Request")
	proto.RegisterType((*Response)(nil), "read_proc.Response")
	proto.RegisterType((*Header)(nil), "read_proc.Header")
	proto.RegisterType((*BarragePerSecond)(nil), "read_proc.BarragePerSecond")
	proto.RegisterType((*Body)(nil), "read_proc.Body")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ReadProc service

type ReadProcClient interface {
	// 定义SayHello方法
	SyncBarrage(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type readProcClient struct {
	cc *grpc.ClientConn
}

func NewReadProcClient(cc *grpc.ClientConn) ReadProcClient {
	return &readProcClient{cc}
}

func (c *readProcClient) SyncBarrage(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/read_proc.ReadProc/SyncBarrage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ReadProc service

type ReadProcServer interface {
	// 定义SayHello方法
	SyncBarrage(context.Context, *Request) (*Response, error)
}

func RegisterReadProcServer(s *grpc.Server, srv ReadProcServer) {
	s.RegisterService(&_ReadProc_serviceDesc, srv)
}

func _ReadProc_SyncBarrage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReadProcServer).SyncBarrage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/read_proc.ReadProc/SyncBarrage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReadProcServer).SyncBarrage(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _ReadProc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "read_proc.ReadProc",
	HandlerType: (*ReadProcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SyncBarrage",
			Handler:    _ReadProc_SyncBarrage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "read_proc.proto",
}

func init() { proto.RegisterFile("read_proc.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 251 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x91, 0x31, 0x4f, 0xc3, 0x40,
	0x0c, 0x46, 0x29, 0x54, 0x09, 0x75, 0x84, 0x0a, 0x66, 0x20, 0x82, 0xa5, 0x1c, 0x4b, 0x91, 0x50,
	0x87, 0x20, 0x24, 0x16, 0x96, 0x88, 0x01, 0xb6, 0xea, 0x3a, 0xd1, 0xa5, 0xba, 0xdc, 0x59, 0xc0,
	0xc0, 0x39, 0x38, 0x61, 0xc8, 0xbf, 0x47, 0xb9, 0xa4, 0x34, 0x30, 0x33, 0xda, 0x7e, 0xdf, 0xd3,
	0x9d, 0x0d, 0x53, 0x21, 0xe3, 0x36, 0xa5, 0xb0, 0x5d, 0x94, 0xc2, 0x35, 0xe3, 0xe4, 0xa7, 0xa1,
	0x5e, 0x20, 0xd6, 0xf4, 0xf9, 0x45, 0x55, 0x8d, 0xd7, 0x10, 0xbd, 0x91, 0x71, 0x24, 0xe9, 0x68,
	0x36, 0x9a, 0x27, 0xd9, 0xc9, 0x62, 0x97, 0x7b, 0x0a, 0x03, 0xdd, 0x03, 0x78, 0x05, 0xe3, 0x82,
	0x5d, 0x93, 0xee, 0x07, 0x70, 0x3a, 0x00, 0x73, 0x76, 0x8d, 0x0e, 0x43, 0xb5, 0x86, 0x43, 0x4d,
	0x55, 0xc9, 0xbe, 0xa2, 0x7f, 0x77, 0x5f, 0x42, 0xd4, 0xc5, 0xf0, 0x0c, 0x62, 0x61, 0xfe, 0xd8,
	0xbc, 0xbb, 0xa0, 0x3e, 0xd2, 0x51, 0x5b, 0x3e, 0x3b, 0x75, 0x03, 0xc7, 0xb9, 0x11, 0x31, 0xaf,
	0xb4, 0x24, 0x59, 0x91, 0x65, 0xef, 0x30, 0x85, 0xd8, 0xb2, 0xaf, 0xc9, 0xd7, 0xe9, 0x68, 0x76,
	0x30, 0x9f, 0xe8, 0x6d, 0xa9, 0x1e, 0x60, 0xdc, 0xea, 0xf1, 0x0e, 0xe2, 0xa2, 0x4b, 0x05, 0x22,
	0xc9, 0x2e, 0x86, 0x0f, 0xf8, 0xe3, 0xd3, 0x5b, 0x36, 0x7b, 0x6c, 0xff, 0x6a, 0xdc, 0x52, 0xd8,
	0xe2, 0x3d, 0x24, 0xab, 0xc6, 0xdb, 0x1e, 0x46, 0x1c, 0x08, 0xfa, 0x55, 0x9f, 0x9f, 0xfe, 0xea,
	0x75, 0x3b, 0x52, 0x7b, 0x79, 0xb2, 0xde, 0x5d, 0xa6, 0x88, 0xc2, 0xad, 0x6e, 0xbf, 0x03, 0x00,
	0x00, 0xff, 0xff, 0xb2, 0x71, 0xfd, 0xcf, 0xbe, 0x01, 0x00, 0x00,
}
